@model DMProject.Models.BuildVennDigram
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <style>
/*        * {
            margin: 0;
            padding: 0;
            font-family: sans-serif;
        }*/
/*
        .chartMenu {
            width: 100vw;
            height: 40px;
            background: #1A1A1A;
            color: rgba(54, 162, 235, 1);
        }
*/
      /*      .chartMenu p {
                padding: 10px;
                font-size: 20px;
            }*/

        .chartCard {
            width: 100vw;
            height: calc(100vh - 40px);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .chartBox {
            width: 700px;
            padding: 20px;
            border-radius: 20px;
            border: solid 3px rgba(54, 162, 235, 1);
            background: white;
        }

        .chartBox viewBtn {
            color: black;
            border: 1px solid white;
        }

    </style>
</head>
<body>
    <div class="container">
        <div class="info mt-5">
        </div>
        <div class="row">
            <div class="chartCard">
                <div class="chartBox">
                    <button type="button" style="background: #78C1F3; border: 1px solid white;" class="btn viewBtn">Result</button>
                    <button type="button" style="background: #F2EAD3; border: 1px solid white;" class="btn viewBtn">Remain</button>
                    <br />
                    <strong class="mt-2" id="Universal"></strong>
                    <canvas id="myChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</body>
</html>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script type="text/javascript" src="https://unpkg.com/chartjs-chart-venn@3.6.0/build/index.umd.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script>

    var sets = [];
    


    $(document).ready(function () {
         $.ajax({
            type: "Get",
            url: '@Url.Action("GetData", "Home")',
            contentType: 'application/json',
             success: function (db) {
                 sets = db;

                 var colors = [] //0:A . 1:B , 2:C
                 var remainArea = "#F2EAD3";
                 var outputArea = "#78C1F3";
                 var arr = [];
                 
                 if (sets.Type == "c") {
                     $("#Universal").show();
                     $("#Universal").text("U : " + sets.U.join(','));
                     $(".chartBox").css({"background":outputArea });
                     if (sets.A != null) {
                         var c1 = { label: 'A', values: sets.A }
                         arr.push(c1);
                     }
                     else if (sets.B != null) {
                         var c1 = { label: 'B', values: sets.B }
                         arr.push(c1);
                     }
                     colors.push(remainArea);
                 }
                 else {
                     $("#Universal").hide();
                     const found1 = sets.A.some(r => sets.Result.includes(r))
                     const found2 = sets.B.some(r => sets.Result.includes(r))

                     if (sets.Type == "∪") {
                         colors.push(outputArea); //A
                         colors.push(outputArea); //B
                         colors.push(outputArea); //AnB
                     }
                     else if (sets.Type == "∩") {
                         colors.push(remainArea); //A
                         colors.push(remainArea); //B
                         colors.push(outputArea);  //AnB
                     }
                     else if (sets.Type == "-") {
                         if (found1 == true && found2 == false) {  //A-B
                             colors.push(outputArea); //A
                             colors.push(remainArea); //B
                             colors.push(remainArea);  //AnB
                         }
                         else if (found1 == false && found2 == true) { //B-A
                             colors.push(remainArea); //A
                             colors.push(outputArea); //B
                             colors.push(remainArea);  //AnB
                         }
                     }

                     var c1 = { label: 'A', values: sets.A }
                     var c2 = { label: 'B', values: sets.B }
                     arr.push(c1);
                     arr.push(c2);

                 }

                 let data = ChartVenn.extractSets(
                     arr
                 );
             
                 // config 
                 const config = {
                     type: 'venn',
                     data,
                     options: {
                         borderColor: [
                             'rgba(255, 26, 104, 1)',
                             'rgba(54, 162, 235, 1)',
                             'rgba(255, 206, 86, 1)',
                             'rgba(75, 192, 192, 1)',
                             'rgba(153, 102, 255, 1)',
                             'rgba(255, 159, 64, 1)',
                             'rgba(0, 0, 0, 1)'
                         ],
                         backgroundColor: [
                             colors[0],//A
                             colors[1],  //B
                             colors[2],  //AnB
                             
                         ],
                         color: [
                             /*'#FFFFFF',*/
                         ],
                         borderWidth: 1
           
                     }
                 };

                 // render init block
                 const myChart = new Chart(
                     document.getElementById('myChart'),
                     config
                 );

                 // Instantly assign Chart.js version
                 const chartVersion = document.getElementById('chartVersion');
                 chartVersion.innerText = Chart.version;

                
            },
         });

    });

    

</script>

